
const zeitgeber={};

(()=>{zeitgeber.isBelowTriggerZone=false;zeitgeber.switchThemes=(trigger,header,headerLogo,lightLogo,darkLogo,themeClass,threshold)=>{window.addEventListener('scroll',evt=>{const positionFromTop=trigger.getBoundingClientRect().top;if(zeitgeber.isBelowTriggerZone){if(positionFromTop>=threshold){header.classList.remove(themeClass);headerLogo.attributes.src.value=lightLogo;zeitgeber.isBelowTriggerZone=false;}}else{if(positionFromTop<threshold){header.classList.add(themeClass);headerLogo.attributes.src.value=darkLogo;zeitgeber.isBelowTriggerZone=true;}}});}
zeitgeber.fadeIn=(elementsToApply,fadeInClass)=>{elementsToApply.forEach(e=>e.classList.add(fadeInClass));window.addEventListener('scroll',evt=>{elementsToApply.forEach(e=>{const positionFromTop=e.getBoundingClientRect().top;if(positionFromTop<800){e.classList.remove(fadeInClass);}});});};})();

(()=>{zeitgeber.setImagesWhenLoaded=(elements)=>{const imgPromises=elements.map(e=>fetch(e.getAttribute('imgUrl')));Promise.all(imgPromises).then(imgs=>{elements.forEach((e,i)=>{e.style.backgroundImage=`url(${imgs[i].url})`;})});};})();

(()=>{zeitgeber.extractRequestPayload=($fromTarget,byQuery,withField)=>{const $elements=$fromTarget.querySelectorAll(byQuery);return Array.from($elements).reduce((acc,$cur)=>{return{...acc,[$cur.name]:$cur[withField]};},{});}
zeitgeber.sendHttpRequest=(method,url,data)=>{return fetch(url,{method:method,body:(data instanceof FormData)?data:JSON.stringify(data),headers:(data instanceof FormData)?{}:{'Content-Type':'application/json'}}).then(response=>{if(response.status>=400){return response.json().then(errResData=>{const error=new Error('Something went wrong requesting your data');error.data=errResData;throw error;});}
return response.json();});}
zeitgeber.sendCaptchaRequest=async(captchaAction,url,data)=>{const token=await grecaptcha.execute('REPLACE_WITH_YOUR_reCAPTCHA_site_key',{action:captchaAction});return await zeitgeber.sendHttpRequest('POST',url,{...data,captcha:token});}})();